---
import PillsMpo from './PillsMpo.astro';

const componentId = 'insta-main';
---

<div class="relative group" data-insta-component="main">
  <span class="cursor-pointer md:cursor-default font-semibold md:pointer-events-none">
    <a href="https://www.instagram.com/marquesaspo/" target="_blank" rel="noopener noreferrer">
      <PillsMpo />
    </a>
  </span>
  <div
    id="insta-modal-tooltip-main"
    class="hidden md:block md:absolute md:z-50 md:left-1/2 md:top-full md:mt-2 md:-translate-x-1/2 md:bg-transparent md:transition-opacity md:duration-150"
    style="width:440px; min-width:440px; max-width:440px; opacity:0; pointer-events:none; visibility:hidden;"
  >
    <a href="https://www.instagram.com/marquesaspo/" target="_blank" rel="noopener noreferrer">
      <img
        id="insta-card-main"
        alt="Instagram Card"
        class="rounded-lg shadow-lg transition-transform hover:scale-105 bg-white w-full"
        style="width:440px; min-width:440px; max-width:440px;"
        src="/card_Insta.png"
      />
    </a>
  </div>
</div>

<script type="module">
// Nota: No se puede usar 'interface' en archivos JS. 
// Se asume que INSTA_MODAL_SINGLETON_INITIALIZED puede estar en window.
(function() {
  'use strict';
  if (window.INSTA_MODAL_SINGLETON_INITIALIZED) {
    console.log('[INSTA DEBUG] Singleton ya inicializado, saltando...');
    return;
  }
  window.INSTA_MODAL_SINGLETON_INITIALIZED = true;
  console.log('[INSTA DEBUG] Inicializando SINGLETON de Instagram Modal');

  // Estado global único
  const INSTA_STATE = {
    imageLoaded: false,
    imagePreloaded: false,
    imageSrc: '/card_Insta.png',
    isHoverActive: false,
    isTooltipActive: false,
    loadingPromise: null,
    initialized: false
  };

  // Referencias DOM
  let trigger = null;
  let tooltip = null;
  let imgElement = null;

  function getDOMReferences() {
    if (!trigger) trigger = document.querySelector('[data-insta-component="main"]');
    if (!tooltip) tooltip = document.getElementById('insta-modal-tooltip-main');
    if (!imgElement) imgElement = document.getElementById('insta-card-main');
    return trigger && tooltip && imgElement;
  }

  // Precarga la imagen UNA SOLA VEZ
  function preloadImageOnce() {
    if (INSTA_STATE.imagePreloaded || INSTA_STATE.loadingPromise) {
      return INSTA_STATE.loadingPromise || Promise.resolve();
    }
    console.log('[INSTA DEBUG] Iniciando precarga ÚNICA de imagen');
    INSTA_STATE.loadingPromise = new Promise((resolve) => {
      const tempImg = new window.Image();
      tempImg.onload = function() {
        INSTA_STATE.imagePreloaded = true;
        console.log('[INSTA DEBUG] Imagen precargada exitosamente en memoria');
        resolve();
      };
      tempImg.onerror = function(error) {
        console.error('[INSTA DEBUG] Error precargando imagen:', error);
        resolve(); // No rechazar, permitir que continúe
      };
      tempImg.src = INSTA_STATE.imageSrc;
    });
    return INSTA_STATE.loadingPromise;
  }

  // Mostrar tooltip
  async function showTooltip() {
    if (window.innerWidth < 768) return;
    if (!getDOMReferences()) return;
    console.log('[INSTA DEBUG] Mostrando tooltip');
    await preloadImageOnce();
    // Solo asignar src si no está ya asignado
    if (imgElement && !imgElement.src && INSTA_STATE.imagePreloaded) {
      imgElement.src = INSTA_STATE.imageSrc;
      INSTA_STATE.imageLoaded = true;
    }
    if (tooltip) {
      tooltip.style.opacity = '1';
      tooltip.style.pointerEvents = 'auto';
      tooltip.style.visibility = 'visible';
    }
  }

  // Ocultar tooltip
  function hideTooltip() {
    if (INSTA_STATE.isHoverActive || INSTA_STATE.isTooltipActive) return;
    if (window.innerWidth < 768) return;
    if (tooltip) {
      tooltip.style.opacity = '0';
      tooltip.style.pointerEvents = 'none';
      tooltip.style.visibility = 'hidden';
    }
  }

  // Inicializar eventos UNA SOLA VEZ
  function initializeEvents() {
    if (INSTA_STATE.initialized) return;
    if (!getDOMReferences()) return;
    console.log('[INSTA DEBUG] Inicializando eventos de Instagram Modal');
    if (trigger) {
      trigger.addEventListener('mouseenter', function() {
        INSTA_STATE.isHoverActive = true;
        showTooltip();
      });
      trigger.addEventListener('mouseleave', function() {
        INSTA_STATE.isHoverActive = false;
        setTimeout(hideTooltip, 60);
      });
    }
    if (tooltip) {
      tooltip.addEventListener('mouseenter', function() {
        INSTA_STATE.isTooltipActive = true;
      });
      tooltip.addEventListener('mouseleave', function() {
        INSTA_STATE.isTooltipActive = false;
        setTimeout(hideTooltip, 60);
      });
    }
    INSTA_STATE.initialized = true;
    setTimeout(() => { preloadImageOnce(); }, 1000);
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeEvents);
  } else {
    initializeEvents();
  }

  setTimeout(() => {
    getDOMReferences();
    console.log('[INSTA DEBUG] Estado final:', {
      imageLoaded: INSTA_STATE.imageLoaded,
      imagePreloaded: INSTA_STATE.imagePreloaded,
      initialized: INSTA_STATE.initialized,
      hasTrigger: !!trigger,
      hasTooltip: !!tooltip,
      hasImg: !!imgElement
    });
  }, 2000);

})();
</script>

<style>
@media (min-width: 768px) {
  [data-insta-component="main"] #insta-modal-tooltip-main {
    display: block;
    animation: fadeIn 0.18s ease-in-out;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
</style>
