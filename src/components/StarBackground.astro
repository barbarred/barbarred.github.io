---
---

<div class="star-background">
  <div id="stars"></div>    
  <div id="stars2"></div>
  <div id="stars3"></div>
  <div class="shooting-star right-to-left"></div>
  <div class="shooting-star top-to-bottom"></div>
</div>

<style>
.star-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
  overflow: hidden;
}

#stars {
  width: 1px;
  height: 1px;
  background: transparent;
  box-shadow: var(--stars-shadow-1);
  animation: animStar 50s linear infinite;
}

#stars:after {
  content: " ";
  position: absolute;
  top: 2000px;
  width: 1px;
  height: 1px;
  background: transparent;
  box-shadow: var(--stars-shadow-1);
}

#stars2 {
  width: 2px;
  height: 2px;
  background: transparent;
  box-shadow: var(--stars-shadow-2);
  animation: animStar 100s linear infinite;
}

#stars2:after {
  content: " ";
  position: absolute;
  top: 2000px;
  width: 2px;
  height: 2px;
  background: transparent;
  box-shadow: var(--stars-shadow-2);
}

#stars3 {
  width: 3px;
  height: 3px;
  background: transparent;
  box-shadow: var(--stars-shadow-3);
  animation: animStar 150s linear infinite;
}

#stars3:after {
  content: " ";
  position: absolute;
  top: 2000px;
  width: 3px;
  height: 3px;
  background: transparent;
  box-shadow: var(--stars-shadow-3);
}

@keyframes animStar {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-2000px);
  }
}

.shooting-star {
  position: absolute;
  width: 6px;
  height: 6px;
  background-color: #fff;
  border-radius: 50%;
  filter: drop-shadow(0 0 10px #fff);
  opacity: 0;
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: translateX(-100%);
    background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);
  }
}

/* Animación de derecha a izquierda en diagonal */
@keyframes shootingStarRightToLeft {
  0% {
    transform: translate(110vw, 20vh) rotate(-15deg);
    opacity: 0;
  }
  15% {
    opacity: 1;
  }
  70% {
    transform: translate(-10vw, 40vh) rotate(-15deg);
    opacity: 1;
  }
  100% {
    transform: translate(-10vw, 40vh) rotate(-15deg);
    opacity: 0;
  }
}

/* Animación de izquierda a derecha en diagonal */
@keyframes shootingStarLeftToRight {
  0% {
    transform: translate(-10vw, 40vh) rotate(15deg);
    opacity: 0;
  }
  15% {
    opacity: 1;
  }
  70% {
    transform: translate(110vw, 60vh) rotate(15deg);
    opacity: 1;
  }
  100% {
    transform: translate(110vw, 60vh) rotate(15deg);
    opacity: 0;
  }
}

/* Animación de arriba a abajo en diagonal */
@keyframes shootingStarTopToBottom {
  0% {
    transform: translate(30vw, -10vh) rotate(45deg);
    opacity: 0;
  }
  15% {
    opacity: 1;
  }
  70% {
    transform: translate(60vw, 110vh) rotate(45deg);
    opacity: 1;
  }
  100% {
    transform: translate(60vw, 110vh) rotate(45deg);
    opacity: 0;
  }
}
</style>

<script>
function generateStarsShadow(count: number, size: number) {
  let shadow = '';
  for (let i = 0; i < count; i++) {
    const x = Math.floor(Math.random() * window.innerWidth);
    const y = Math.floor(Math.random() * 2000);
    shadow += `${x}px ${y}px #FFF${i === count - 1 ? '' : ', '}`;
  }
  return shadow;
}

function updateStarsShadows() {
  const root = document.documentElement;
  root.style.setProperty('--stars-shadow-1', generateStarsShadow(700, 1));
  root.style.setProperty('--stars-shadow-2', generateStarsShadow(200, 2));
  root.style.setProperty('--stars-shadow-3', generateStarsShadow(100, 3));
}

// Inicializar las estrellas
updateStarsShadows();

// Actualizar cuando cambie el tamaño de la ventana
window.addEventListener('resize', updateStarsShadows);

// Función para animar las estrellas en secuencia
function animateShootingStars() {
  const rightToLeft = document.querySelector('.right-to-left') as HTMLElement;
  const topToBottom = document.querySelector('.top-to-bottom') as HTMLElement;

  // Duración de cada animación
  const duration = 5;
  // Retraso entre las estrellas (4 segundos)
  const delay = 4;

  function animate() {
    // Primera estrella (derecha a izquierda)
    setTimeout(() => {
      rightToLeft.style.animation = 'none';
      rightToLeft.offsetHeight;
      rightToLeft.style.animation = `shootingStarRightToLeft ${duration}s cubic-bezier(0.4, 0, 0.2, 1)`;
    }, 0);

    // Segunda estrella (arriba a abajo), 4 segundos después
    setTimeout(() => {
      topToBottom.style.animation = 'none';
      topToBottom.offsetHeight;
      topToBottom.style.animation = `shootingStarTopToBottom ${duration}s cubic-bezier(0.4, 0, 0.2, 1)`;
    }, delay * 1000);
  }

  // Iniciar la primera secuencia
  animate();

  // Repetir la secuencia cada 10 segundos (5s de duración + 4s de delay + 1s extra)
  setInterval(animate, 10000);
}

// Iniciar las animaciones después de un pequeño retraso
setTimeout(animateShootingStars, 1000);
</script>
